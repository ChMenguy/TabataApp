{"ast":null,"code":"import { useEffect, useState } from 'react';\n\nfunction useLocalStorage(key, initialValue) {\n  var readValue = function () {\n    if (typeof window === 'undefined') {\n      return initialValue;\n    }\n\n    try {\n      var item = window.localStorage.getItem(key);\n      return item ? parseJSON(item) : initialValue;\n    } catch (error) {\n      console.warn(\"Error reading localStorage key \\u201C\" + key + \"\\u201D:\", error);\n      return initialValue;\n    }\n  };\n\n  var _a = useState(readValue),\n      storedValue = _a[0],\n      setStoredValue = _a[1];\n\n  var setValue = function (value) {\n    if (typeof window == 'undefined') {\n      console.warn(\"Tried setting localStorage key \\u201C\" + key + \"\\u201D even though environment is not a client\");\n    }\n\n    try {\n      var newValue = value instanceof Function ? value(storedValue) : value;\n      window.localStorage.setItem(key, JSON.stringify(newValue));\n      setStoredValue(newValue);\n      window.dispatchEvent(new Event('local-storage'));\n    } catch (error) {\n      console.warn(\"Error setting localStorage key \\u201C\" + key + \"\\u201D:\", error);\n    }\n  };\n\n  useEffect(function () {\n    setStoredValue(readValue());\n  }, []);\n  useEffect(function () {\n    var handleStorageChange = function () {\n      setStoredValue(readValue());\n    };\n\n    window.addEventListener('storage', handleStorageChange);\n    window.addEventListener('local-storage', handleStorageChange);\n    return function () {\n      window.removeEventListener('storage', handleStorageChange);\n      window.removeEventListener('local-storage', handleStorageChange);\n    };\n  }, []);\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n\nfunction parseJSON(value) {\n  try {\n    return value === 'undefined' ? undefined : JSON.parse(value !== null && value !== void 0 ? value : '');\n  } catch (error) {\n    console.log('parsing error on', {\n      value: value\n    });\n    return undefined;\n  }\n}","map":{"version":3,"sources":["../../src/useLocalStorage/useLocalStorage.ts"],"names":[],"mappings":"AAAA,SAAmC,SAAnC,EAA8C,QAA9C,QAA8D,OAA9D;;AAIA,SAAS,eAAT,CAA4B,GAA5B,EAAyC,YAAzC,EAAwD;AAGtD,MAAM,SAAS,GAAG,YAAA;AAEhB,QAAI,OAAO,MAAP,KAAkB,WAAtB,EAAmC;AACjC,aAAO,YAAP;AACD;;AAED,QAAI;AACF,UAAM,IAAI,GAAG,MAAM,CAAC,YAAP,CAAoB,OAApB,CAA4B,GAA5B,CAAb;AACA,aAAO,IAAI,GAAI,SAAS,CAAC,IAAD,CAAb,GAA4B,YAAvC;AACD,KAHD,CAGE,OAAO,KAAP,EAAc;AACd,MAAA,OAAO,CAAC,IAAR,CAAa,0CAAmC,GAAnC,GAAsC,SAAnD,EAAyD,KAAzD;AACA,aAAO,YAAP;AACD;AACF,GAbD;;AAiBM,MAAA,EAAA,GAAgC,QAAQ,CAAI,SAAJ,CAAxC;AAAA,MAAC,WAAW,GAAA,EAAA,CAAA,CAAA,CAAZ;AAAA,MAAc,cAAc,GAAA,EAAA,CAAA,CAAA,CAA5B;;AAIN,MAAM,QAAQ,GAAgB,UAAA,KAAA,EAAK;AAEjC,QAAI,OAAO,MAAP,IAAiB,WAArB,EAAkC;AAChC,MAAA,OAAO,CAAC,IAAR,CACE,0CAAmC,GAAnC,GAAsC,gDADxC;AAGD;;AAED,QAAI;AAEF,UAAM,QAAQ,GAAG,KAAK,YAAY,QAAjB,GAA4B,KAAK,CAAC,WAAD,CAAjC,GAAiD,KAAlE;AAGA,MAAA,MAAM,CAAC,YAAP,CAAoB,OAApB,CAA4B,GAA5B,EAAiC,IAAI,CAAC,SAAL,CAAe,QAAf,CAAjC;AAGA,MAAA,cAAc,CAAC,QAAD,CAAd;AAGA,MAAA,MAAM,CAAC,aAAP,CAAqB,IAAI,KAAJ,CAAU,eAAV,CAArB;AACD,KAZD,CAYE,OAAO,KAAP,EAAc;AACd,MAAA,OAAO,CAAC,IAAR,CAAa,0CAAmC,GAAnC,GAAsC,SAAnD,EAAyD,KAAzD;AACD;AACF,GAvBD;;AAyBA,EAAA,SAAS,CAAC,YAAA;AACR,IAAA,cAAc,CAAC,SAAS,EAAV,CAAd;AAED,GAHQ,EAGN,EAHM,CAAT;AAKA,EAAA,SAAS,CAAC,YAAA;AACR,QAAM,mBAAmB,GAAG,YAAA;AAC1B,MAAA,cAAc,CAAC,SAAS,EAAV,CAAd;AACD,KAFD;;AAKA,IAAA,MAAM,CAAC,gBAAP,CAAwB,SAAxB,EAAmC,mBAAnC;AAGA,IAAA,MAAM,CAAC,gBAAP,CAAwB,eAAxB,EAAyC,mBAAzC;AAEA,WAAO,YAAA;AACL,MAAA,MAAM,CAAC,mBAAP,CAA2B,SAA3B,EAAsC,mBAAtC;AACA,MAAA,MAAM,CAAC,mBAAP,CAA2B,eAA3B,EAA4C,mBAA5C;AACD,KAHD;AAKD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,SAAO,CAAC,WAAD,EAAc,QAAd,CAAP;AACD;;AAED,eAAe,eAAf;;AAGA,SAAS,SAAT,CAAsB,KAAtB,EAA0C;AACxC,MAAI;AACF,WAAO,KAAK,KAAK,WAAV,GAAwB,SAAxB,GAAoC,IAAI,CAAC,KAAL,CAAW,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAA,KAAA,GAAS,EAApB,CAA3C;AACD,GAFD,CAEE,OAAO,KAAP,EAAc;AACd,IAAA,OAAO,CAAC,GAAR,CAAY,kBAAZ,EAAgC;AAAE,MAAA,KAAK,EAAA;AAAP,KAAhC;AACA,WAAO,SAAP;AACD;AACF","sourceRoot":"","sourcesContent":["import { useEffect, useState } from 'react';\nfunction useLocalStorage(key, initialValue) {\n    var readValue = function () {\n        if (typeof window === 'undefined') {\n            return initialValue;\n        }\n        try {\n            var item = window.localStorage.getItem(key);\n            return item ? parseJSON(item) : initialValue;\n        }\n        catch (error) {\n            console.warn(\"Error reading localStorage key \\u201C\" + key + \"\\u201D:\", error);\n            return initialValue;\n        }\n    };\n    var _a = useState(readValue), storedValue = _a[0], setStoredValue = _a[1];\n    var setValue = function (value) {\n        if (typeof window == 'undefined') {\n            console.warn(\"Tried setting localStorage key \\u201C\" + key + \"\\u201D even though environment is not a client\");\n        }\n        try {\n            var newValue = value instanceof Function ? value(storedValue) : value;\n            window.localStorage.setItem(key, JSON.stringify(newValue));\n            setStoredValue(newValue);\n            window.dispatchEvent(new Event('local-storage'));\n        }\n        catch (error) {\n            console.warn(\"Error setting localStorage key \\u201C\" + key + \"\\u201D:\", error);\n        }\n    };\n    useEffect(function () {\n        setStoredValue(readValue());\n    }, []);\n    useEffect(function () {\n        var handleStorageChange = function () {\n            setStoredValue(readValue());\n        };\n        window.addEventListener('storage', handleStorageChange);\n        window.addEventListener('local-storage', handleStorageChange);\n        return function () {\n            window.removeEventListener('storage', handleStorageChange);\n            window.removeEventListener('local-storage', handleStorageChange);\n        };\n    }, []);\n    return [storedValue, setValue];\n}\nexport default useLocalStorage;\nfunction parseJSON(value) {\n    try {\n        return value === 'undefined' ? undefined : JSON.parse(value !== null && value !== void 0 ? value : '');\n    }\n    catch (error) {\n        console.log('parsing error on', { value: value });\n        return undefined;\n    }\n}\n//# sourceMappingURL=useLocalStorage.js.map"]},"metadata":{},"sourceType":"module"}