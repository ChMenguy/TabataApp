{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { useEffect, useReducer, useRef } from 'react';\n\nfunction useFetch(url, options) {\n  var _this = this;\n\n  var cache = useRef({});\n  var cancelRequest = useRef(false);\n  var initialState = {\n    error: undefined,\n    data: undefined\n  };\n\n  var fetchReducer = function (state, action) {\n    switch (action.type) {\n      case 'loading':\n        return __assign({}, initialState);\n\n      case 'fetched':\n        return __assign(__assign({}, initialState), {\n          data: action.payload\n        });\n\n      case 'error':\n        return __assign(__assign({}, initialState), {\n          error: action.payload\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  var _a = useReducer(fetchReducer, initialState),\n      state = _a[0],\n      dispatch = _a[1];\n\n  useEffect(function () {\n    if (!url) return;\n\n    var fetchData = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var response, data, error_1;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              dispatch({\n                type: 'loading'\n              });\n\n              if (cache.current[url]) {\n                dispatch({\n                  type: 'fetched',\n                  payload: cache.current[url]\n                });\n                return [2];\n              }\n\n              _a.label = 1;\n\n            case 1:\n              _a.trys.push([1, 4,, 5]);\n\n              return [4, fetch(url, options)];\n\n            case 2:\n              response = _a.sent();\n\n              if (!response.ok) {\n                throw new Error(response.statusText);\n              }\n\n              return [4, response.json()];\n\n            case 3:\n              data = _a.sent();\n              cache.current[url] = data;\n              if (cancelRequest.current) return [2];\n              dispatch({\n                type: 'fetched',\n                payload: data\n              });\n              return [3, 5];\n\n            case 4:\n              error_1 = _a.sent();\n              if (cancelRequest.current) return [2];\n              dispatch({\n                type: 'error',\n                payload: error_1\n              });\n              return [3, 5];\n\n            case 5:\n              return [2];\n          }\n        });\n      });\n    };\n\n    void fetchData();\n    return function () {\n      cancelRequest.current = true;\n    };\n  }, [url]);\n  return state;\n}\n\nexport default useFetch;","map":{"version":3,"sources":["../../src/useFetch/useFetch.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { useEffect, useReducer, useRef } from 'react';\nfunction useFetch(url, options) {\n    var _this = this;\n    var cache = useRef({});\n    var cancelRequest = useRef(false);\n    var initialState = {\n        error: undefined,\n        data: undefined,\n    };\n    var fetchReducer = function (state, action) {\n        switch (action.type) {\n            case 'loading':\n                return __assign({}, initialState);\n            case 'fetched':\n                return __assign(__assign({}, initialState), { data: action.payload });\n            case 'error':\n                return __assign(__assign({}, initialState), { error: action.payload });\n            default:\n                return state;\n        }\n    };\n    var _a = useReducer(fetchReducer, initialState), state = _a[0], dispatch = _a[1];\n    useEffect(function () {\n        if (!url)\n            return;\n        var fetchData = function () { return __awaiter(_this, void 0, void 0, function () {\n            var response, data, error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        dispatch({ type: 'loading' });\n                        if (cache.current[url]) {\n                            dispatch({ type: 'fetched', payload: cache.current[url] });\n                            return [2];\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 4, , 5]);\n                        return [4, fetch(url, options)];\n                    case 2:\n                        response = _a.sent();\n                        if (!response.ok) {\n                            throw new Error(response.statusText);\n                        }\n                        return [4, response.json()];\n                    case 3:\n                        data = (_a.sent());\n                        cache.current[url] = data;\n                        if (cancelRequest.current)\n                            return [2];\n                        dispatch({ type: 'fetched', payload: data });\n                        return [3, 5];\n                    case 4:\n                        error_1 = _a.sent();\n                        if (cancelRequest.current)\n                            return [2];\n                        dispatch({ type: 'error', payload: error_1 });\n                        return [3, 5];\n                    case 5: return [2];\n                }\n            });\n        }); };\n        void fetchData();\n        return function () {\n            cancelRequest.current = true;\n        };\n    }, [url]);\n    return state;\n}\nexport default useFetch;\n//# sourceMappingURL=useFetch.js.map"]},"metadata":{},"sourceType":"module"}