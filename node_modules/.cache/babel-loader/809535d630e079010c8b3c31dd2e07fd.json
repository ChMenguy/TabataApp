{"ast":null,"code":"import { StrictMode } from 'react';\nimport * as ACTION_TYPES from '../actions/action_types';\nexport const initialStateApp = {\n  workout: {\n    rounds: null,\n    worktime: null,\n    resttime: null,\n    complete: false\n  }\n};\nexport const handleActions = {\n  [ACTION_TYPES.SET_MAIN_TITLE]: (store, action) => {\n    return { ...store,\n      app: { ...store.app,\n        titleMain: action.payload\n      }\n    };\n  },\n  [ACTION_TYPES.SET_TOOLS]: (store, action) => {\n    return { ...store,\n      tools: { ...store.tools,\n        mode: action.payload.mode,\n        idProject: action.payload.idProject\n      }\n    };\n  },\n  [ACTION_TYPES.SET_PROJECTS]: (store, action) => {\n    return { ...store,\n      projects: action.payload\n    };\n  },\n  [ACTION_TYPES.SET_CURRENT_PROJECT]: (store, action) => {\n    return { ...store,\n      currentProject: { ...store.currentProject,\n        title: action.payload.title,\n        desc: action.payload.desc\n      }\n    };\n  },\n  [ACTION_TYPES.SET_TYPE_TO_PROJECT]: (store, action) => {\n    return { ...store,\n      currentProject: { ...store.currentProject,\n        type: action.payload\n      }\n    };\n  },\n  [ACTION_TYPES.ADD_ROUTE_TO_PROJECT]: (store, action) => {\n    return { ...store,\n      currentProject: { ...store.currentProject,\n        route: action.payload\n      }\n    };\n  },\n  [ACTION_TYPES.SET_POIS_TO_PROJECT]: (store, action) => {\n    return { ...store,\n      currentProject: { ...store.currentProject,\n        pois: action.payload\n      }\n    };\n  },\n  // [ACTION_TYPES.UPDATE_FEATURE_TO_PROJECT]: (store, action) => {\n  //   let datas = [...store.currentProject.datas]\n  //   // TODO UPDATE\n  //   return {\n  //     ...store,\n  //     currentProject: { ...store.currentProject, datas: datas},\n  //   }\n  // },\n  [ACTION_TYPES.SET_FEATURE_POIS]: (store, action) => {\n    return { ...store,\n      currentPois: { ...store.currentPois,\n        feature: action.payload\n      }\n    };\n  },\n  [ACTION_TYPES.SET_CURRENT_POIS]: (store, action) => {\n    return { ...store,\n      currentPois: { ...store.currentPois,\n        title: action.payload.title,\n        infos: action.payload.infos\n      }\n    };\n  }\n};\nexport const appReducer = (store, action) => Boolean(handleActions[action.type]) ? handleActions[action.type](store, action) : store;","map":{"version":3,"sources":["/Users/christophe/Documents/GitHub/TabataApp/src/store/reducers/app_reducer.js"],"names":["StrictMode","ACTION_TYPES","initialStateApp","workout","rounds","worktime","resttime","complete","handleActions","SET_MAIN_TITLE","store","action","app","titleMain","payload","SET_TOOLS","tools","mode","idProject","SET_PROJECTS","projects","SET_CURRENT_PROJECT","currentProject","title","desc","SET_TYPE_TO_PROJECT","type","ADD_ROUTE_TO_PROJECT","route","SET_POIS_TO_PROJECT","pois","SET_FEATURE_POIS","currentPois","feature","SET_CURRENT_POIS","infos","appReducer","Boolean"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAO,KAAKC,YAAZ,MAA8B,yBAA9B;AAEA,OAAO,MAAMC,eAAe,GAAG;AAC3BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAG,IADF;AAEPC,IAAAA,QAAQ,EAAG,IAFJ;AAGPC,IAAAA,QAAQ,EAAG,IAHJ;AAIPC,IAAAA,QAAQ,EAAG;AAJJ;AADkB,CAAxB;AASP,OAAO,MAAMC,aAAa,GAAG;AAC3B,GAACP,YAAY,CAACQ,cAAd,GAA+B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChD,WAAO,EACL,GAAGD,KADE;AAELE,MAAAA,GAAG,EAAE,EAAE,GAAGF,KAAK,CAACE,GAAX;AAAgBC,QAAAA,SAAS,EAAGF,MAAM,CAACG;AAAnC;AAFA,KAAP;AAID,GAN0B;AAO3B,GAACb,YAAY,CAACc,SAAd,GAA0B,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC3C,WAAO,EACL,GAAGD,KADE;AAELM,MAAAA,KAAK,EAAE,EAAE,GAAGN,KAAK,CAACM,KAAX;AAAkBC,QAAAA,IAAI,EAAEN,MAAM,CAACG,OAAP,CAAeG,IAAvC;AAA6CC,QAAAA,SAAS,EAAGP,MAAM,CAACG,OAAP,CAAeI;AAAxE;AAFF,KAAP;AAID,GAZ0B;AAa3B,GAACjB,YAAY,CAACkB,YAAd,GAA6B,CAACT,KAAD,EAAQC,MAAR,KAAmB;AAC9C,WAAO,EACL,GAAGD,KADE;AAELU,MAAAA,QAAQ,EAAET,MAAM,CAACG;AAFZ,KAAP;AAID,GAlB0B;AAmB3B,GAACb,YAAY,CAACoB,mBAAd,GAAoC,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACrD,WAAO,EACL,GAAGD,KADE;AAELY,MAAAA,cAAc,EAAE,EAAE,GAAGZ,KAAK,CAACY,cAAX;AAA2BC,QAAAA,KAAK,EAAEZ,MAAM,CAACG,OAAP,CAAeS,KAAjD;AAAwDC,QAAAA,IAAI,EAAGb,MAAM,CAACG,OAAP,CAAeU;AAA9E;AAFX,KAAP;AAID,GAxB0B;AAyB3B,GAACvB,YAAY,CAACwB,mBAAd,GAAoC,CAACf,KAAD,EAAQC,MAAR,KAAmB;AACrD,WAAO,EACL,GAAGD,KADE;AAELY,MAAAA,cAAc,EAAE,EAAE,GAAGZ,KAAK,CAACY,cAAX;AAA2BI,QAAAA,IAAI,EAAEf,MAAM,CAACG;AAAxC;AAFX,KAAP;AAID,GA9B0B;AA+B3B,GAACb,YAAY,CAAC0B,oBAAd,GAAqC,CAACjB,KAAD,EAAQC,MAAR,KAAmB;AACtD,WAAO,EACL,GAAGD,KADE;AAELY,MAAAA,cAAc,EAAE,EAAE,GAAGZ,KAAK,CAACY,cAAX;AAA2BM,QAAAA,KAAK,EAAEjB,MAAM,CAACG;AAAzC;AAFX,KAAP;AAID,GApC0B;AAqC3B,GAACb,YAAY,CAAC4B,mBAAd,GAAoC,CAACnB,KAAD,EAAQC,MAAR,KAAmB;AACpD,WAAO,EACL,GAAGD,KADE;AAELY,MAAAA,cAAc,EAAE,EAAE,GAAGZ,KAAK,CAACY,cAAX;AAA2BQ,QAAAA,IAAI,EAAEnB,MAAM,CAACG;AAAxC;AAFX,KAAP;AAID,GA1CyB;AA2C3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAACb,YAAY,CAAC8B,gBAAd,GAAiC,CAACrB,KAAD,EAAQC,MAAR,KAAmB;AAClD,WAAO,EACL,GAAGD,KADE;AAELsB,MAAAA,WAAW,EAAE,EAAE,GAAGtB,KAAK,CAACsB,WAAX;AAAwBC,QAAAA,OAAO,EAAEtB,MAAM,CAACG;AAAxC;AAFR,KAAP;AAID,GAzD0B;AA0D3B,GAACb,YAAY,CAACiC,gBAAd,GAAiC,CAACxB,KAAD,EAAQC,MAAR,KAAmB;AAClD,WAAO,EACL,GAAGD,KADE;AAELsB,MAAAA,WAAW,EAAE,EAAE,GAAGtB,KAAK,CAACsB,WAAX;AAAwBT,QAAAA,KAAK,EAAEZ,MAAM,CAACG,OAAP,CAAeS,KAA9C;AAAqDY,QAAAA,KAAK,EAAGxB,MAAM,CAACG,OAAP,CAAeqB;AAA5E;AAFR,KAAP;AAID;AA/D0B,CAAtB;AAoEP,OAAO,MAAMC,UAAU,GAAG,CAAC1B,KAAD,EAAQC,MAAR,KACxB0B,OAAO,CAAC7B,aAAa,CAACG,MAAM,CAACe,IAAR,CAAd,CAAP,GACIlB,aAAa,CAACG,MAAM,CAACe,IAAR,CAAb,CAA2BhB,KAA3B,EAAkCC,MAAlC,CADJ,GAEID,KAHC","sourcesContent":["import { StrictMode } from 'react'\nimport * as ACTION_TYPES from '../actions/action_types'\n\nexport const initialStateApp = {\n    workout: {\n      rounds : null,\n      worktime : null,\n      resttime : null,\n      complete : false\n    },\n}\n\nexport const handleActions = {\n  [ACTION_TYPES.SET_MAIN_TITLE]: (store, action) => {\n    return {\n      ...store,\n      app: { ...store.app, titleMain:  action.payload },\n    }\n  },\n  [ACTION_TYPES.SET_TOOLS]: (store, action) => {\n    return {\n      ...store,\n      tools: { ...store.tools, mode: action.payload.mode, idProject : action.payload.idProject},\n    }\n  },\n  [ACTION_TYPES.SET_PROJECTS]: (store, action) => {\n    return {\n      ...store,\n      projects: action.payload,\n    }\n  },\n  [ACTION_TYPES.SET_CURRENT_PROJECT]: (store, action) => {\n    return {\n      ...store,\n      currentProject: { ...store.currentProject, title: action.payload.title, desc : action.payload.desc},\n    }\n  },\n  [ACTION_TYPES.SET_TYPE_TO_PROJECT]: (store, action) => {\n    return {\n      ...store,\n      currentProject: { ...store.currentProject, type: action.payload},\n    }\n  },\n  [ACTION_TYPES.ADD_ROUTE_TO_PROJECT]: (store, action) => {\n    return {\n      ...store,\n      currentProject: { ...store.currentProject, route: action.payload},\n    }\n  },\n  [ACTION_TYPES.SET_POIS_TO_PROJECT]: (store, action) => {\n     return {\n       ...store,\n       currentProject: { ...store.currentProject, pois: action.payload},\n     }\n   },\n  // [ACTION_TYPES.UPDATE_FEATURE_TO_PROJECT]: (store, action) => {\n  //   let datas = [...store.currentProject.datas]\n  //   // TODO UPDATE\n  //   return {\n  //     ...store,\n  //     currentProject: { ...store.currentProject, datas: datas},\n  //   }\n  // },\n\n  [ACTION_TYPES.SET_FEATURE_POIS]: (store, action) => {\n    return {\n      ...store,\n      currentPois: { ...store.currentPois, feature: action.payload},\n    }\n  },\n  [ACTION_TYPES.SET_CURRENT_POIS]: (store, action) => {\n    return {\n      ...store,\n      currentPois: { ...store.currentPois, title: action.payload.title, infos : action.payload.infos},\n    }\n  },\n\n  \n}\n\nexport const appReducer = (store, action) =>\n  Boolean(handleActions[action.type])\n    ? handleActions[action.type](store, action)\n    : store\n"]},"metadata":{},"sourceType":"module"}