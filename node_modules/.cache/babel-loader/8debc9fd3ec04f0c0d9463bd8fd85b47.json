{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport { useEventListener } from '../useEventListener';\n\nfunction useElementSize(elementRef) {\n  var _a = useState({\n    width: 0,\n    height: 0\n  }),\n      size = _a[0],\n      setSize = _a[1];\n\n  var updateSize = useCallback(function () {\n    var node = elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;\n\n    if (node) {\n      setSize({\n        width: node.offsetWidth || 0,\n        height: node.offsetHeight || 0\n      });\n    }\n  }, [elementRef]);\n  useEffect(function () {\n    updateSize();\n  }, []);\n  useEventListener('resize', updateSize);\n  return size;\n}\n\nexport default useElementSize;","map":{"version":3,"sources":["../../src/useElementSize/useElementSize.ts"],"names":[],"mappings":"AAAA,SAAoB,WAApB,EAAiC,SAAjC,EAA4C,QAA5C,QAA4D,OAA5D;AAGA,SAAS,gBAAT,QAAiC,qBAAjC;;AAOA,SAAS,cAAT,CACE,UADF,EAC0B;AAElB,MAAA,EAAA,GAAkB,QAAQ,CAAO;AACrC,IAAA,KAAK,EAAE,CAD8B;AAErC,IAAA,MAAM,EAAE;AAF6B,GAAP,CAA1B;AAAA,MAAC,IAAI,GAAA,EAAA,CAAA,CAAA,CAAL;AAAA,MAAO,OAAO,GAAA,EAAA,CAAA,CAAA,CAAd;;AAMN,MAAM,UAAU,GAAG,WAAW,CAAC,YAAA;AAC7B,QAAM,IAAI,GAAG,UAAU,KAAA,IAAV,IAAA,UAAU,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAA,UAAU,CAAE,OAAzB;;AACA,QAAI,IAAJ,EAAU;AACR,MAAA,OAAO,CAAC;AACN,QAAA,KAAK,EAAE,IAAI,CAAC,WAAL,IAAoB,CADrB;AAEN,QAAA,MAAM,EAAE,IAAI,CAAC,YAAL,IAAqB;AAFvB,OAAD,CAAP;AAID;AACF,GAR6B,EAQ3B,CAAC,UAAD,CAR2B,CAA9B;AAWA,EAAA,SAAS,CAAC,YAAA;AACR,IAAA,UAAU;AAEX,GAHQ,EAGN,EAHM,CAAT;AAKA,EAAA,gBAAgB,CAAC,QAAD,EAAW,UAAX,CAAhB;AAEA,SAAO,IAAP;AACD;;AAED,eAAe,cAAf","sourceRoot":"","sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useEventListener } from '../useEventListener';\nfunction useElementSize(elementRef) {\n    var _a = useState({\n        width: 0,\n        height: 0,\n    }), size = _a[0], setSize = _a[1];\n    var updateSize = useCallback(function () {\n        var node = elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;\n        if (node) {\n            setSize({\n                width: node.offsetWidth || 0,\n                height: node.offsetHeight || 0,\n            });\n        }\n    }, [elementRef]);\n    useEffect(function () {\n        updateSize();\n    }, []);\n    useEventListener('resize', updateSize);\n    return size;\n}\nexport default useElementSize;\n//# sourceMappingURL=useElementSize.js.map"]},"metadata":{},"sourceType":"module"}