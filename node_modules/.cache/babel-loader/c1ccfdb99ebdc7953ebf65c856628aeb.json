{"ast":null,"code":"var _jsxFileName = \"/Users/christophe/Documents/GitHub/TabataApp/src/screens/Workout.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { Context } from \"../store/Store\";\nimport Layout from \"../layout/Layout\";\nimport CircleProgression from \"../composants/CircleProgression\";\nimport { useInterval } from \"usehooks-ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Workout() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    app,\n    dispatch\n  } = React.useContext(Context);\n  const [workout, setWorkout] = useState(null);\n  const [work, setWork] = useState(true);\n  const [finish, setFinish] = useState(false);\n  const [count, setCount] = useState();\n  useEffect(_s(() => {\n    _s();\n\n    setWorkout(app.workout);\n\n    if (workout.rounds == 0) {\n      setFinish(true);\n    } else {\n      if (work) {\n        setCount(work.worktime);\n        useInterval(() => {\n          setCount(count - 1);\n        }, count === 0 ? null : 1000);\n      }\n    }\n  }, \"pgv8HMpMrAP7yI0t0MhsSmroZ6w=\", false, function () {\n    return [useInterval];\n  }));\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(CircleProgression, {\n      time: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Workout, \"OEUEXgi6fpMC+2mxdsKvbXZxLlY=\");\n\n_c = Workout;\nexport default Workout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workout\");","map":{"version":3,"sources":["/Users/christophe/Documents/GitHub/TabataApp/src/screens/Workout.jsx"],"names":["React","useEffect","useState","ReactAudioPlayer","Context","Layout","CircleProgression","useInterval","Workout","app","dispatch","useContext","workout","setWorkout","work","setWork","finish","setFinish","count","setCount","rounds","worktime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,SAASC,OAAT,GAAkB;AAAA;;AAAA;;AAEd,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAoBV,KAAK,CAACW,UAAN,CAAiBP,OAAjB,CAA1B;AACA,QAAM,CAACQ,OAAD,EAASC,UAAT,IAAuBX,QAAQ,CAAC,IAAD,CAArC;AACA,QAAM,CAACY,IAAD,EAAMC,OAAN,IAAgBb,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACgB,KAAD,EAAOC,QAAP,IAAkBjB,QAAQ,EAAhC;AAEAD,EAAAA,SAAS,IAAC,MAAI;AAAA;;AACVY,IAAAA,UAAU,CAACJ,GAAG,CAACG,OAAL,CAAV;;AAEA,QAAGA,OAAO,CAACQ,MAAR,IAAkB,CAArB,EAAuB;AACnBH,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAFD,MAEO;AACH,UAAGH,IAAH,EAAQ;AACJK,QAAAA,QAAQ,CAACL,IAAI,CAACO,QAAN,CAAR;AACAd,QAAAA,WAAW,CACP,MAAM;AACJY,UAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,SAHM,EAIPA,KAAK,KAAK,CAAV,GAAc,IAAd,GAAqB,IAJd,CAAX;AAMH;AACJ;AAEJ,GAjBQ;AAAA,YAQGX,WARH;AAAA,KAAT;AAmBA,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,iBAAD;AACI,MAAA,IAAI,EAAEW;AADV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;IAlCQV,O;;KAAAA,O;AAoCT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\nimport { Context } from \"../store/Store\";\n\nimport Layout from \"../layout/Layout\";\nimport CircleProgression from \"../composants/CircleProgression\";\nimport { useInterval } from \"usehooks-ts\";\n\nfunction Workout(){\n\n    const { app, dispatch } = React.useContext(Context);\n    const [workout,setWorkout] = useState(null)\n    const [work,setWork]= useState(true)\n    const [finish, setFinish] = useState(false)\n    const [count,setCount]= useState()\n\n    useEffect(()=>{\n        setWorkout(app.workout)\n\n        if(workout.rounds == 0){\n            setFinish(true)\n        } else {\n            if(work){\n                setCount(work.worktime)\n                useInterval(\n                    () => {\n                      setCount(count - 1)\n                    },\n                    count === 0 ? null : 1000,\n                )\n            }\n        }\n\n    })\n\n    return(\n        <Layout>\n            <CircleProgression \n                time={count}\n            />\n        </Layout>\n    )\n}\n\nexport default Workout"]},"metadata":{},"sourceType":"module"}