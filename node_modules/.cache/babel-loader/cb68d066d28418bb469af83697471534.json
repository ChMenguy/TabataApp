{"ast":null,"code":"var _jsxFileName = \"/Users/christophe/Documents/GitHub/TabataApp/src/screens/Workout.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport { Context } from \"../store/Store\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\nimport Layout from \"../layout/Layout\";\nimport CircleProgression from \"../composants/CircleProgression\";\nimport { useInterval } from \"usehooks-ts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Workout() {\n  _s();\n\n  const {\n    app,\n    dispatch\n  } = React.useContext(Context);\n  const [rounds, setRounds] = useState(app.workout.rounds);\n  const [roundsDone, setRoundsDone] = useState(1);\n  const [countWork, setCountWork] = useState(app.workout.worktime);\n  const [countRest, setCountRest] = useState(app.workout.resttime);\n  const [value, setValue] = useState(0);\n  const [work, setWork] = useState(true);\n  const [finish, setFinish] = useState(false);\n  useInterval(() => {\n    if (rounds == 0) {\n      setFinish(true);\n    } else {\n      if (work) {\n        if (countWork == 1) {\n          setWork(false);\n          setCountWork(app.workout.worktime);\n          setValue(0);\n        } else {\n          setCountWork(countWork - 1);\n          setValue(value + 100 / app.workout.worktime);\n        }\n      } else {\n        if (countRest == 1) {\n          setWork(true);\n          setCountRest(app.workout.resttime);\n          setRounds(rounds - 1);\n          setRoundsDone(roundsDone + 1);\n          setValue(0);\n        } else {\n          setCountRest(countRest - 1);\n          setValue(value + 100 / app.workout.resttime);\n        }\n      }\n    }\n  }, 1000);\n  return finish ? /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      className: \"mx-auto mt-52 text-yellow-500\",\n      size: \"10x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center text-2xl text-white mt-6\",\n      children: \"Bien Jou\\xE9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(CircleProgression, {\n      value: value,\n      time: work ? countWork : countRest,\n      mode: work ? 'WORK' : 'REST'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-yellow-500 font-bold mt-10 text-2xl\",\n      children: [roundsDone, \"/\", app.workout.rounds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Workout, \"DHlbDhTjkJ8q7g6iyo2QG+CkCDQ=\", false, function () {\n  return [useInterval];\n});\n\n_c = Workout;\nexport default Workout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Workout\");","map":{"version":3,"sources":["/Users/christophe/Documents/GitHub/TabataApp/src/screens/Workout.jsx"],"names":["React","useEffect","useState","ReactAudioPlayer","Context","FontAwesomeIcon","faThumbsUp","Layout","CircleProgression","useInterval","Workout","app","dispatch","useContext","rounds","setRounds","workout","roundsDone","setRoundsDone","countWork","setCountWork","worktime","countRest","setCountRest","resttime","value","setValue","work","setWork","finish","setFinish"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactAudioPlayer from \"react-audio-player\";\n\nimport { Context } from \"../store/Store\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {faThumbsUp} from \"@fortawesome/free-solid-svg-icons\"\n\nimport Layout from \"../layout/Layout\";\nimport CircleProgression from \"../composants/CircleProgression\";\nimport { useInterval } from \"usehooks-ts\";\n\nfunction Workout(){\n\n    const { app, dispatch } = React.useContext(Context);\n  \n    const [rounds,setRounds]= useState(app.workout.rounds)\n    const [roundsDone,setRoundsDone] = useState(1)\n    const [countWork,setCountWork]= useState(app.workout.worktime)\n    const [countRest,setCountRest]= useState(app.workout.resttime)\n    const [value,setValue] = useState(0)\n\n    const [work,setWork] = useState(true)\n    const [finish, setFinish] = useState(false)\n\n    useInterval(\n        () => {\n            if(rounds==0){\n                setFinish(true)\n            } else {\n                if(work){       \n                    if(countWork==1){\n                        setWork(false) \n                        setCountWork(app.workout.worktime)\n                        setValue(0)\n                    } else {\n                        setCountWork(countWork-1)  \n                        setValue(value + 100/app.workout.worktime)  \n                    } \n                } else {\n                    if(countRest==1){\n                        setWork(true) \n                        setCountRest(app.workout.resttime)\n                        setRounds(rounds-1)\n                        setRoundsDone(roundsDone +1)\n                        setValue(0)\n                    } else{\n                        setCountRest(countRest-1)\n                        setValue(value + 100/app.workout.resttime)  \n                       \n                    }\n                }      \n            }\n         \n        },\n        1000,\n    )\n\n\n    return(\n        finish ?\n            <Layout>\n                <FontAwesomeIcon\n                    icon={faThumbsUp}\n                    className = \"mx-auto mt-52 text-yellow-500\"\n                    size=\"10x\"\n                />\n                <h1 className=\"text-center text-2xl text-white mt-6\">Bien Jou√©</h1>\n            </Layout>\n        :\n        <Layout>\n            <CircleProgression \n                value = {value}\n                time={work ? countWork : countRest}\n                mode = { work ? 'WORK' : 'REST' }\n            />\n            <p className=\"text-center text-yellow-500 font-bold mt-10 text-2xl\">{roundsDone}/{app.workout.rounds}</p>\n        </Layout>\n    )\n}\n\nexport default Workout"]},"metadata":{},"sourceType":"module"}